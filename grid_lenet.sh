NAME=lenet
mkdir -p couts/

for TRAIN_DATASET_SIZE in `seq 100 100 900` `seq 1000 1000 10000`
do
    for LEARNING_RATE in 0.1 0.01 0.001
    do
	CUDA_VISIBLE_DEVICES=0 python classifier.py --TRAIN_DATASET_SIZE=$TRAIN_DATASET_SIZE --LEARNING_RATE=$LEARNING_RATE --LEARNING_RATE_DECAY=piecewise --ITERS=10000 --DISC_TYPE=lenet --DATASET=mnist > couts/$NAME.TRAIN_${TRAIN_DATASET_SIZE}_LR_${LEARNING_RATE}.cout 2> couts/$NAME.TRAIN_${TRAIN_DATASET_SIZE}_LR_${LEARNING_RATE}.cerr
	for LIPSCHITZ_TARGET in `seq 0.5 0.2 0.9` `seq 1 1 5`
	do
	    
	    CUDA_VISIBLE_DEVICES=0 python classifier.py --LAMBDA=0.0001 --LIPSCHITZ_TARGET=$LIPSCHITZ_TARGET --TRAIN_DATASET_SIZE=$TRAIN_DATASET_SIZE --LEARNING_RATE=$LEARNING_RATE --LEARNING_RATE_DECAY=piecewise --ITERS=10000 --DISC_TYPE=lenet --DATASET=mnist > couts/$NAME.GP_TRAIN_${TRAIN_DATASET_SIZE}_LR_${LEARNING_RATE}.cout 2> couts/$NAME.GP_TRAIN_${TRAIN_DATASET_SIZE}_LR_${LEARNING_RATE}.cerr
	    CUDA_VISIBLE_DEVICES=0 python classifier.py --GRADIENT_SHRINKING=True --LIPSCHITZ_TARGET=$LIPSCHITZ_TARGET --TRAIN_DATASET_SIZE=$TRAIN_DATASET_SIZE --LEARNING_RATE=$LEARNING_RATE --LEARNING_RATE_DECAY=piecewise --ITERS=10000 --DISC_TYPE=lenet --DATASET=mnist > couts/$NAME.GS_TRAIN_${TRAIN_DATASET_SIZE}_LR_${LEARNING_RATE}.cout 2> couts/$NAME.GS_TRAIN_${TRAIN_DATASET_SIZE}_LR_${LEARNING_RATE}.cerr

	done
    done
done
